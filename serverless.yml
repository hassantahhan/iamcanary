service: IAMCanary

frameworkVersion: '2'

plugins:
  - serverless-plugin-aws-alerts

package:
  individually: true
  exclude:
    - ./**

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  stage: dev
  region: ap-southeast-2
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - iam:SimulatePrincipalPolicy
          Resource: '*'

functions:
  checkPrincipalAllowed:
    description: Check if actions assigned to an IAM users, roles, or groups are allowed
    handler: handler.canary_test_allowed
    package:
      include:
        - handler.py
    timeout: 10
    events:
      - schedule: rate(1 minute)
    environment:
      principals_actions_json: '{"arn:aws:iam::111111111111:role/Admin":"ec2:RunInstances"}' # Change this to match your requirements 
  checkPrincipalDenied:
    description: Check if actions assigned to an IAM users, roles, or groups are denied
    handler: handler.canary_test_denied
    package:
      include:
        - handler.py
    timeout: 10
    events:
      - schedule: rate(1 minute)
    environment:
      principals_actions_json: '{"arn:aws:iam::111111111111:role/Read":"ec2:RunInstances"}' # Change this to match your requirements

custom:
  alerts:
    topics:
      alarm:
        topic: ${self:service}-alerts-alarm
        notifications:
          - protocol: email
            endpoint: name@domain.com # Change this to your email address
    alarms:
      - functionErrors